/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.itec1.e_commerce.views;

import com.itec1.e_commerce.entities.Employee;
import com.itec1.e_commerce.entities.Warehouse;
import com.itec1.e_commerce.controllers.EmployeePanelController;
import com.itec1.e_commerce.views.resources.FieldDataValidator;
import com.itec1.e_commerce.views.resources.JTextFieldListener;
import com.itec1.e_commerce.views.resources.TableListener;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;

import java.util.List;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JTextField;

/**
 *
 * @author sjcex
 */
public final class Management_Employees_Panel extends javax.swing.JPanel implements InterfacePanel {

    private final EmployeePanelController controller;
    private final FieldDataValidator validator;
    private List<Employee> employees;
    private List<Warehouse> warehouses;

    /**
     * Creates new form Management_Client_Panel
     */
    public Management_Employees_Panel() {
        initComponents();

        this.controller = new EmployeePanelController(this);
        initListener();

        this.validator = new FieldDataValidator();
        initValidator();

        initPanel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_crud2 = new javax.swing.JPanel();
        jScrollPaneTabla2 = new javax.swing.JScrollPane();
        tableWarehouse = new javax.swing.JTable();
        seeWarehouse = new javax.swing.JButton();
        jbl_filter = new javax.swing.JLabel();
        jtf_codeFilter = new javax.swing.JTextField();
        jPanel_datos1 = new javax.swing.JPanel();
        jbn_update = new javax.swing.JButton();
        jbn_delete = new javax.swing.JButton();
        jbn_save = new javax.swing.JButton();
        jbn_restore = new javax.swing.JButton();
        jlbl_info = new javax.swing.JLabel();
        jScrollPaneTabla3 = new javax.swing.JScrollPane();
        tableEmployees = new javax.swing.JTable();
        jbl_name = new javax.swing.JLabel();
        jbl_lastname = new javax.swing.JLabel();
        jbl_cuit = new javax.swing.JLabel();
        jbl_address = new javax.swing.JLabel();
        jbl_email = new javax.swing.JLabel();
        jbl_phone = new javax.swing.JLabel();
        jtf_name = new javax.swing.JTextField();
        jtf_lastname = new javax.swing.JTextField();
        jtf_cuit = new javax.swing.JTextField();
        jtf_address = new javax.swing.JTextField();
        jtf_email = new javax.swing.JTextField();
        jtf_phone = new javax.swing.JTextField();

        jPanel_crud2.setBackground(new java.awt.Color(0, 51, 255));

        jScrollPaneTabla2.setMaximumSize(new java.awt.Dimension(950, 750));
        jScrollPaneTabla2.setMinimumSize(new java.awt.Dimension(950, 750));
        jScrollPaneTabla2.setPreferredSize(new java.awt.Dimension(950, 750));

        tableWarehouse.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jScrollPaneTabla2.setViewportView(tableWarehouse);

        seeWarehouse.setText("VER SUCURSALES");
        seeWarehouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeWarehouseActionPerformed(evt);
            }
        });

        jbl_filter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbl_filter.setForeground(new java.awt.Color(255, 255, 255));
        jbl_filter.setText("Filtrar por código:");

        jtf_codeFilter.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtf_codeFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_codeFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_crud2Layout = new javax.swing.GroupLayout(jPanel_crud2);
        jPanel_crud2.setLayout(jPanel_crud2Layout);
        jPanel_crud2Layout.setHorizontalGroup(
            jPanel_crud2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_crud2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel_crud2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_crud2Layout.createSequentialGroup()
                        .addComponent(jbl_filter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtf_codeFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(seeWarehouse))
                    .addComponent(jScrollPaneTabla2, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(277, Short.MAX_VALUE))
        );
        jPanel_crud2Layout.setVerticalGroup(
            jPanel_crud2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_crud2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPaneTabla2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel_crud2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_crud2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seeWarehouse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_crud2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel_crud2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbl_filter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtf_codeFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        jPanel_datos1.setBackground(new java.awt.Color(0, 51, 255));

        jbn_update.setText("MODIFICAR");
        jbn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbn_updateActionPerformed(evt);
            }
        });

        jbn_delete.setText("ELIMINAR");
        jbn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbn_deleteActionPerformed(evt);
            }
        });

        jbn_save.setText("GUARDAR");
        jbn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbn_saveActionPerformed(evt);
            }
        });

        jbn_restore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-sincronizar-32.png"))); // NOI18N
        jbn_restore.setText("RECUPERAR");
        jbn_restore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbn_restoreActionPerformed(evt);
            }
        });

        jlbl_info.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jScrollPaneTabla3.setMaximumSize(new java.awt.Dimension(950, 750));
        jScrollPaneTabla3.setMinimumSize(new java.awt.Dimension(950, 750));
        jScrollPaneTabla3.setPreferredSize(new java.awt.Dimension(950, 750));

        tableEmployees.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        tableEmployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPaneTabla3.setViewportView(tableEmployees);

        jbl_name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbl_name.setForeground(new java.awt.Color(255, 255, 255));
        jbl_name.setText("NOMBRE");

        jbl_lastname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbl_lastname.setForeground(new java.awt.Color(255, 255, 255));
        jbl_lastname.setText("APELLIDO");

        jbl_cuit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbl_cuit.setForeground(new java.awt.Color(255, 255, 255));
        jbl_cuit.setText("C.U.I.T.");

        jbl_address.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbl_address.setForeground(new java.awt.Color(255, 255, 255));
        jbl_address.setText("DIRECCIÓN");

        jbl_email.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbl_email.setForeground(new java.awt.Color(255, 255, 255));
        jbl_email.setText("E-MAIL");

        jbl_phone.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbl_phone.setForeground(new java.awt.Color(255, 255, 255));
        jbl_phone.setText("TELÉFONO");

        jtf_name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jtf_lastname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jtf_cuit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jtf_address.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jtf_email.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jtf_phone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel_datos1Layout = new javax.swing.GroupLayout(jPanel_datos1);
        jPanel_datos1.setLayout(jPanel_datos1Layout);
        jPanel_datos1Layout.setHorizontalGroup(
            jPanel_datos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_datos1Layout.createSequentialGroup()
                .addGroup(jPanel_datos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_datos1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPaneTabla3, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addGroup(jPanel_datos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbl_address, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbl_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbl_lastname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbl_cuit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbl_email, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbl_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_datos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtf_address, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                            .addComponent(jtf_email, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                            .addComponent(jtf_phone, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                            .addComponent(jtf_name)
                            .addComponent(jtf_lastname)
                            .addComponent(jtf_cuit)))
                    .addGroup(jPanel_datos1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jbn_restore)
                        .addGap(83, 83, 83)
                        .addComponent(jbn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(jbn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(jbn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(jPanel_datos1Layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(jlbl_info, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel_datos1Layout.setVerticalGroup(
            jPanel_datos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_datos1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel_datos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneTabla3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel_datos1Layout.createSequentialGroup()
                        .addGroup(jPanel_datos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbl_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_datos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbl_lastname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_lastname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_datos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbl_cuit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_cuit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_datos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbl_address, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_address, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_datos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbl_email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_datos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbl_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(13, 13, 13)
                .addComponent(jlbl_info, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_datos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbn_restore, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(133, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_crud2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel_datos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel_crud2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_datos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void seeWarehouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeWarehouseActionPerformed
        initPanel();
    }//GEN-LAST:event_seeWarehouseActionPerformed

    private void jtf_codeFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_codeFilterActionPerformed
        employees = controller.updateTable(jtf_codeFilter.getText());
    }//GEN-LAST:event_jtf_codeFilterActionPerformed

    private void jbn_restoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbn_restoreActionPerformed
        if (controller.verifyCrud("restore")) {
            changeConditionButton(jbn_save, false);
            changeConditionField(jtf_cuit, true);
            setGreenFont();
            jlbl_info.setText("Ingrese el código del empleado a restaurar y vuelva a presionar");
        } else {
            {
                Employee newEmployee = controller.findByCuit(jtf_cuit.getText());
                jlbl_info.setText(controller.enable(newEmployee.getId()));
            }
            initPanel();
        }
    }//GEN-LAST:event_jbn_restoreActionPerformed

    private void jbn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbn_saveActionPerformed
        if (controller.verifyCrud("save")) {
            changeConditionAllFields(true);
            setGreenFont();
            jlbl_info.setText("Complete los datos y vuelva a presionar Guardar");
            changeConditionAllButtons(false);
            changeConditionButton(jbn_save, true);
        } else {
            if (verifyEmptyFields()) {
                setRedFont();
                jlbl_info.setText("Error: no pueden haber datos vacios");
            } else {
                Employee newEmployee = fillEmployeeData();
                jlbl_info.setText(controller.create(newEmployee));
            }
            initPanel();
        }
    }//GEN-LAST:event_jbn_saveActionPerformed

    private void jbn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbn_deleteActionPerformed
        Employee newEmployee = controller.findByCuit(jtf_cuit.getText());
        jlbl_info.setText(controller.disable(newEmployee.getId()));
        initPanel();
    }//GEN-LAST:event_jbn_deleteActionPerformed

    private void jbn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbn_updateActionPerformed
        if (controller.verifyCrud("update")) {
            changeConditionAllButtons(false);
            changeConditionAllFields(true);
            changeConditionField(jtf_cuit, false);
            changeConditionButton(jbn_update, true);
            setGreenFont();
            jlbl_info.setText("Modifique los datos que requiera y vuelva a pulsar");
        } else {
            if (verifyEmptyFields()) {
                setRedFont();
                jlbl_info.setText("Error: no puede tener nombre vacío");
            } else {
                Employee employeeUpdated = fillEmployeeData();
                employeeUpdated.setId(controller.findByCuit(jtf_cuit.getText()).getId());
                jlbl_info.setText(controller.update(employeeUpdated.getId(), employeeUpdated));
            }
            initPanel();
        }
    }//GEN-LAST:event_jbn_updateActionPerformed

    private Employee fillEmployeeData() {
        Employee entity = new Employee();
        entity.setName(jtf_name.getText());
        entity.setLastname(jtf_lastname.getText());
        entity.setCuit(jtf_cuit.getText());
        entity.setAddress(jtf_address.getText());
        entity.setEmail(jtf_email.getText());
        entity.setPhone(jtf_phone.getText());
        entity.setWarehouse(warehouses.get(tableWarehouse.getSelectedRow()));
        return entity;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel_crud2;
    private javax.swing.JPanel jPanel_datos1;
    private javax.swing.JScrollPane jScrollPaneTabla2;
    private javax.swing.JScrollPane jScrollPaneTabla3;
    private javax.swing.JLabel jbl_address;
    private javax.swing.JLabel jbl_cuit;
    private javax.swing.JLabel jbl_email;
    private javax.swing.JLabel jbl_filter;
    private javax.swing.JLabel jbl_lastname;
    private javax.swing.JLabel jbl_name;
    private javax.swing.JLabel jbl_phone;
    private javax.swing.JButton jbn_delete;
    private javax.swing.JButton jbn_restore;
    private javax.swing.JButton jbn_save;
    private javax.swing.JButton jbn_update;
    private javax.swing.JLabel jlbl_info;
    private javax.swing.JTextField jtf_address;
    private javax.swing.JTextField jtf_codeFilter;
    private javax.swing.JTextField jtf_cuit;
    private javax.swing.JTextField jtf_email;
    private javax.swing.JTextField jtf_lastname;
    private javax.swing.JTextField jtf_name;
    private javax.swing.JTextField jtf_phone;
    private javax.swing.JButton seeWarehouse;
    private javax.swing.JTable tableEmployees;
    private javax.swing.JTable tableWarehouse;
    // End of variables declaration//GEN-END:variables

    @Override
    public void initListener() {
        tableWarehouse.getSelectionModel().addListSelectionListener(new TableListener(this));
        tableEmployees.getSelectionModel().addListSelectionListener(new TableListener(this));
        jtf_codeFilter.getDocument().addDocumentListener(new JTextFieldListener(this));
    }

    @Override
    public void initValidator() {
        validator.onlyNumbers(jtf_cuit);
        validator.onlyNumbers(jtf_phone);
        validator.onlyLetters(jtf_name);
        validator.onlyLetters(jtf_lastname);
    }

    @Override
    public void initPanel() {
        changeConditionAllButtons(false);
        changeConditionAllFields(false);
        if (tableWarehouse.getSelectedRow() >= 0) {
            selectFromTable();
        } else {
            this.warehouses = controller.getWarehouses("");
            this.employees = controller.updateTable("");
        }
    }

    @Override
    public JTable getTable() {
        return tableEmployees;
    }

    public JTable getTableWarehouse() {
        return tableWarehouse;
    }

    @Override
    public void selectFromTable() {
        int fieldWarehouse = tableWarehouse.getSelectedRow();
        int fieldSectors = tableEmployees.getSelectedRow();
        if (fieldWarehouse >= 0) {
            Warehouse selected = warehouses.get(fieldWarehouse);
            employees = controller.updateTable(selected.getCode());
            changeConditionButton(jbn_save, true);
            changeConditionButton(jbn_restore, true);
            cleanAllFields();
        }
        if (fieldSectors >= 0) {
            Employee selected = employees.get(fieldSectors);
            jtf_name.setText(selected.getName());
            jtf_lastname.setText(selected.getLastname());
            jtf_cuit.setText(selected.getCuit());
            jtf_address.setText(selected.getAddress());
            jtf_email.setText(selected.getEmail());
            jtf_phone.setText(selected.getPhone());
            changeConditionAllButtons(true);
            changeConditionButton(jbn_save, false);
            changeConditionButton(jbn_restore, false);
        }
        controller.verifyCrud("");
    }

    @Override
    public void changeConditionAllFields(boolean state) {
        changeConditionField(jtf_name, state);
        changeConditionField(jtf_lastname, state);
        changeConditionField(jtf_cuit, state);
        changeConditionField(jtf_address, state);
        changeConditionField(jtf_email, state);
        changeConditionField(jtf_phone, state);
    }

    @Override
    public void changeConditionField(JTextField textField, boolean state) {
        validator.enableField(state, textField);
    }

    @Override
    public void changeConditionAllButtons(boolean state) {
        changeConditionButton(jbn_save, state);
        changeConditionButton(jbn_restore, state);
        changeConditionButton(jbn_update, state);
        changeConditionButton(jbn_delete, state);
    }

    private void setRedFont() {
        jlbl_info.setForeground(Color.RED);
        jlbl_info.setFont(new Font("Arial", Font.BOLD, 16));
    }

    private void setGreenFont() {
        jlbl_info.setForeground(Color.GREEN);
        jlbl_info.setFont(new Font("Arial", Font.BOLD, 16));
    }

    @Override
    public void changeConditionButton(JButton button, boolean state) {
        validator.enableButton(state, button, null, null, null, null);
    }

    @Override
    public void cleanAllFields() {
        cleanField(jtf_name);
        cleanField(jtf_lastname);
        cleanField(jtf_cuit);
        cleanField(jtf_address);
        cleanField(jtf_email);
        cleanField(jtf_phone);
    }

    @Override
    public void cleanField(JTextField textfield) {
        validator.cleanField(textfield);
    }

    @Override
    public boolean verifyEmptyFields() {
        List<JTextField> fields = new ArrayList<>();
        fields.add(jtf_name);
        fields.add(jtf_lastname);
        fields.add(jtf_cuit);
        fields.add(jtf_address);
        fields.add(jtf_email);
        fields.add(jtf_phone);
        for (JTextField field : fields) {
            if (field.getText().length() == 0) {
                return true;
            }
        }
        return false;
    }

    @Override
    public String getStringFilter() {
        return jtf_codeFilter.getText();
    }

    @Override
    public void updateTable() {
        employees = controller.updateTable(jtf_codeFilter.getText());
    }

}
